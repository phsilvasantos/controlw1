unit atualiza;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Buttons, IdBaseComponent, IdComponent,
  IdTCPConnection, IdTCPClient, IdFTP, idftpcommon, Gauges,
   ExtCtrls, Urlmon, IdAntiFreezeBase, IdAntiFreeze, IdHTTP, ShellAPI ,
    ShlObj, ComObj, ActiveX;

type
  TForm1 = class(TForm)
    Memo1: TMemo;
    Timer1: TTimer;
    Label1: TLabel;
    Gauge1: TGauge;
    IdHTTP1: TIdHTTP;
    IdAntiFreeze1: TIdAntiFreeze;
    Timer2: TTimer;
    Timer3: TTimer;
    procedure FormCreate(Sender: TObject);
    procedure IdFTP1WorkBegin(Sender: TObject; AWorkMode: TWorkMode;
      const AWorkCountMax: Integer);
    procedure IdFTP1Work(Sender: TObject; AWorkMode: TWorkMode;
      const AWorkCount: Integer);
    procedure FormShow(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure IdHTTP1Work(Sender: TObject; AWorkMode: TWorkMode;
      const AWorkCount: Integer);
    procedure IdHTTP1WorkBegin(Sender: TObject; AWorkMode: TWorkMode;
      const AWorkCountMax: Integer);
    procedure IdHTTP1WorkEnd(Sender: TObject; AWorkMode: TWorkMode);
    procedure Timer2Timer(Sender: TObject);
    procedure Timer3Timer(Sender: TObject);

  private
    tamanho : integer;
    pasta : String;
    function PosFinal(substr:string;Texto:string):integer;
    procedure Atualiza;
    procedure deletaArquivosTemporarios;
    procedure fimDownload;
    procedure copiaExecutavel(LANurl : String);
    function GetDesktopPath: string;
    { Private declarations }
  public
    { Public declarations }
  end;                        

var
  Form1: TForm1;
  function DownloadFile(Source, Dest: string): Boolean;


implementation

uses Math;

{$R *.dfm}

procedure TForm1.fimDownload;
begin
  if FileExists(pasta+'controlw.rar') then
    begin
      WinExec(pansichar(pasta +'ControlW.rar'), SW_SHOWNORMAL);
    end;

 Application.Terminate;
 exit;
 try
 try
  if FileExists(pasta+'controlw.exe') then
     begin
       if FileExists(pasta+'controlw.old') then
         begin
           DeleteFile(pasta +'ControlW.old1');
           RenameFile(pasta +'ControlW.exe', pasta +'ControlW.old1');
           Memo1.Lines.Add('Control.exe renomeado para ControlW.old1');
         end
       else
         Memo1.Lines.Add('controlw.old não encontrado');
     end
   else
     begin
       Memo1.Lines.Add(pasta +'ControlW.exe não encontrado');
     end;

   if FileExists(pasta +'ControlW.old') then
     begin
       form1.Update;
       if RenameFile(pasta +'ControlW.old',pasta + 'ControlW.exe') then Memo1.Lines.Add('Arquivo de atualização renomeado para ControlW.exe')
       else Memo1.Lines.Add('Não foi possivel renomear a Atualização');
     end
   else
     begin
       Memo1.Lines.Add('Arquivo de atualização não encontrado');
     end;
  except
    on e: Exception do
      begin
        Memo1.Lines.Add('Ocorreu um Errro: '+ e.Message);
        if pos('Sock', e.Message) > 0 then Memo1.Lines.Add('Verifique a conexão com a internet');
      end;
    end;
  Finally
     if not FileExists(pasta +'controlw.exe') then
       begin
         RenameFile(pasta +'controlw.old1',pasta +'controlw.exe');
       end;
    end;

      WinExec(pansichar(pasta +'ControlW.exe'), SW_SHOWNORMAL);
     // sleep(10000);
      Application.Terminate;
end;


function DownloadFile(Source, Dest: string): Boolean;
begin
  try
    Result := UrlDownloadToFile(nil, PChar(source),PChar(Dest), 0, nil) = 0;
  except
    Result := False;
  end;
end;

procedure TForm1.deletaArquivosTemporarios;
begin
  if FileExists(pasta +'ControlW.old') then
    begin
      DeleteFile(pasta + 'ControlW.old');
    end;
  if FileExists(pasta +'ControlW.old1') then
    begin
      DeleteFile(pasta +'ControlW.old1');
    end;
end;

procedure TForm1.Atualiza;
var
  test : integer;
  arquivo1 : TFileStream;
begin
   try
   test := 0;
   if FileExists(pasta +'ControlW.old') then DeleteFile(pasta +'ControlW.old');
   arquivo1 := TFileStream.Create(pasta +'ControlW.old', fmCreate);
   tamanho := 1;
   Memo1.Lines.Add('Iniciou o Download');
   Application.ProcessMessages;
   Gauge1.Visible := true;
   Label1.Visible := true;
   IdHTTP1.Request.UserAgent := 'Mozilla/5.0 (Windows NT 5.1; rv:2.0b8) Gecko/20100101 Firefox/4.' +
      '0b8';
   IdHTTP1.HTTPOptions := [hoForceEncodeParams];
   IdHTTP1.Get('http://controlw.blog.br/ControlW.rar', arquivo1);
   Memo1.Lines.Clear;
   arquivo1.Free;

   Memo1.Lines.Add('Download Concluído');

   fimDownload;
   //Memo1.Lines.SaveToFile(pasta + 'bd0.fdb');

   Gauge1.Visible := false;
   Label1.Visible := false;
  except
    on e : exception do
      begin
        Memo1.Lines.Add('Erro: ' + e.Message);
      end;
  end;
   //ver se o controlw.exe existe na pasta

end;

function TForm1.PosFinal(substr:string;Texto:string):integer;
var a,b:integer;
var retorno:string;
begin
 b:=0;
 Result := 0;
 for a:=length(Texto) downto 1 do
   begin
     if (texto[a]=substr) and (b=0) then
      begin
       result:=a;
       b:=1;
      end;
   end;
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
  tamanho := 0;
end;

procedure TForm1.IdFTP1WorkBegin(Sender: TObject; AWorkMode: TWorkMode;
  const AWorkCountMax: Integer);
begin
 Gauge1.Progress := 0;
 if AWorkCountMax > 0 then
    Gauge1.MaxValue := AWorkCountMax
 else
    Gauge1.MaxValue := tamanho;
end;

procedure TForm1.IdFTP1Work(Sender: TObject; AWorkMode: TWorkMode;
  const AWorkCount: Integer);
begin
  Gauge1.Progress := AWorkCount;
end;

procedure TForm1.FormShow(Sender: TObject);
begin
  pasta := ExtractFileDir(ParamStr(0)) + '\';

  if ParamStr(1) = '-c' then
    begin
      Timer3.Enabled := true;
      exit;
    end;

  if ParamStr(1) = '-h' then
    begin
      Timer2.Enabled := true;
      exit;
    end;

  Timer1.Enabled := true;
  //ShowMessage(pasta);
end;

procedure TForm1.Timer1Timer(Sender: TObject);
begin
  if tamanho = 0 then  Atualiza;
  Timer1.Enabled := false;
end;

procedure TForm1.IdHTTP1Work(Sender: TObject; AWorkMode: TWorkMode;
  const AWorkCount: Integer);
begin
  Gauge1.Progress := AWorkCount;
end;

procedure TForm1.IdHTTP1WorkBegin(Sender: TObject; AWorkMode: TWorkMode;
  const AWorkCountMax: Integer);
begin
  Gauge1.MaxValue := AWorkCountMax;
end;

procedure TForm1.IdHTTP1WorkEnd(Sender: TObject; AWorkMode: TWorkMode);
begin
  Gauge1.Progress := 0;
//  fimDownload;
end;

procedure TForm1.Timer2Timer(Sender: TObject);
begin
  Timer2.Enabled := false;
  pasta := ExtractFileDir(ParamStr(0)) + '\';
  if FileExists(pasta + 'ControlW.old') then
    begin
      DeleteFile(pasta + 'ControlW.old1');
      RenameFile(pasta + 'ControlW.exe', pasta + 'ControlW.old1');
      RenameFile(pasta + 'ControlW.old', pasta + 'ControlW.exe');
    end;

  Application.Terminate;  
end;

procedure TForm1.Timer3Timer(Sender: TObject);
begin
  Timer3.Enabled := false;

  copiaExecutavel(ParamStr(1));
end;

procedure TForm1.copiaExecutavel(LANurl : String);
var
  cont : integer;
begin
  cont := 0;
  Memo1.Lines.Add('----------------------------------------');
  Memo1.Lines.Add('Iniciando Copia de Arquivos....');
  Memo1.Lines.Add('----------------------------------------');
  while true do
    begin
      Application.ProcessMessages;
      if  cont > 10 then
        begin
          break;
        end;

      try
        if FileExists(ExtractFileDir(ParamStr(0)) + '\ControlW.old') then
          begin
            if FileExists(ExtractFileDir(ParamStr(0)) + '\ControlWD.exe') then DeleteFile(ExtractFileDir(ParamStr(0)) + '\ControlWD.exe');
            RenameFile(ExtractFileDir(ParamStr(0)) + '\ControlW.exe', ExtractFileDir(ParamStr(0)) + '\ControlWD.exe');
            RenameFile(ExtractFileDir(ParamStr(0)) + '\ControlW.old', ExtractFileDir(ParamStr(0)) + '\ControlW.exe');
            if FileExists(ExtractFileDir(ParamStr(0)) + '\ControlW.exe') then break;
          end;  
      except
        if not FileExists(ExtractFileDir(ParamStr(0)) + '\ControlW.exe') then
          begin
            RenameFile(ExtractFileDir(ParamStr(0)) + '\ControlWD.exe', ExtractFileDir(ParamStr(0)) + '\ControlW.exe');
          end;
      end;

      cont := cont + 1;
      sleep(4000);  
    end;

  Memo1.Lines.Add('Atualizado com sucesso!');
  sleep(2000);

  if FileExists(GetDesktopPath + 'ControlW.lnk') then ShellExecute(0,nil,pchar(GetDesktopPath + 'ControlW.lnk') ,nil, nil, SW_SHOWNORMAL);
  Application.Terminate;
end;

function TForm1.GetDesktopPath: string;
//get the location of the Desktop folder
var
  DesktopPidl: PItemIDList;
  DesktopPath: array [0..MAX_PATH] of Char;
begin
  SHGetSpecialFolderLocation(0, CSIDL_DESKTOP, DesktopPidl);
  SHGetPathFromIDList(DesktopPidl, DesktopPath);
  Result := IncludeTrailingPathDelimiter(DesktopPath);
end; (*GetDesktopPath*)

end.
